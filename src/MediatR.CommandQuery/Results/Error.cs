using System.ComponentModel;

namespace MediatR.CommandQuery.Results;

/// <summary>
/// Represents an error with a message and associated metadata.
/// </summary>
[ImmutableObject(true)]
public class Error : IError
{
    private static readonly int DefaultStatus = 500;
    private const string DefaultError = "An unknown error occurred";

    public static Error Empty { get; } = new();

    /// <summary>
    /// Initializes a new instance of the <see cref="Error" /> class.
    /// </summary>
    public Error() : this(DefaultStatus, DefaultError)
    {
    }

    /// <summary>Initializes a new instance of the <see cref="Error" /> class with the specified error message.</summary>
    /// <param name="status">The status code generated by the origin server</param>
    /// <param name="message">The error message.</param>
    public Error(int status, string message)
    {
        Status = status;
        Message = message;
    }

    /// <summary>Initializes a new instance of the <see cref="Error" /> class with the specified metadata.</summary>
    /// <param name="extensions">The metadata associated with the error.</param>
    public Error((string Key, object? Value) extensions)
        : this(DefaultStatus, DefaultError, extensions)
    {
    }

    /// <summary>Initializes a new instance of the <see cref="Error" /> class with the specified error message and metadata.</summary>
    /// <param name="status">The status code generated by the origin server</param>
    /// <param name="message">The error message.</param>
    /// <param name="extensions">The metadata associated with the error.</param>
    public Error(int status, string message, (string Key, object? Value) extensions)
    {
        Status = status;
        Message = message;

        Extensions = new Dictionary<string, object?>
        {
            [extensions.Key] = extensions.Value
        };
    }

    /// <summary>Initializes a new instance of the <see cref="Error" /> class with the specified metadata.</summary>
    /// <param name="extensions">The metadata associated with the error.</param>
    public Error(IReadOnlyDictionary<string, object?> extensions)
        : this(DefaultStatus, DefaultError, extensions)
    {
    }

    /// <summary>Initializes a new instance of the <see cref="Error" /> class with the specified error message and metadata.</summary>
    /// <param name="status">The status code generated by the origin server</param>
    /// <param name="message">The error message.</param>
    /// <param name="extensions">The metadata associated with the error.</param>
    public Error(int status, string message, IReadOnlyDictionary<string, object?> extensions)
    {
        Status = status;
        Message = message;
        Extensions = extensions;
    }

    /// <inheritdoc />
    public int Status { get; set; }

    /// <inheritdoc />
    public string Message { get; }

    /// <inheritdoc />
    public IReadOnlyDictionary<string, object?>? Extensions { get; }
}
